{"version":3,"sources":["icons/clock.svg","containers/SettingsSchedule/SettingsSchedule.types.ts","containers/SettingsSchedule/SettingsSchedule.tsx","pages/SettingsPage/SettingsSchedulePage.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","d","_ref4","SvgClock","_ref","svgRef","title","titleId","props","xmlns","fill","viewBox","ref","id","ForwardRef","DAYS_OF_WEEK","modeOptions","everyday","value","label","weekdays","custom","SettingsSchedule","fieldsRef","useRef","useState","pending","setPending","mode","timeData","everydayWeekdays","data","setData","useDidMount","API","getWokTime","then","times_for_mode","catch","console","error","timeOptions","useMemo","date","Date","setHours","valueTime","toLocaleString","hour","minute","hour12","labelTime","push","onChangeTimeHandler","index","type","prev","updatedTimeData","modeTimeData","dayWorkTime","to","fromTimestamp","slice","from","getValues","config","times","setWorkTime","getTimeSelectMenuStyle","menu","provided","isMenuUp","elem","windowHeight","window","innerHeight","getBoundingClientRect","bottom","isOpenMenuUp","current","top","CustomDropdownIndicator","innerProps","className","getSelectValue","find","option","Spinner","size","ReturnBtn","route","classNamePrefix","isSearchable","defaultValue","options","values","onChange","onChangeModeHandler","components","IndicatorSeparator","map","day","inst","maxMenuHeight","styles","DropdownIndicator","isOptionDisabled","toValue","fromValue","getIsOptionDisabled","SettingsSchedulePage","log"],"mappings":"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","file":"static/js/SettingsScheduleChunk.d686db9b.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 19.2a7.2 7.2 0 100-14.4 7.2 7.2 0 000 14.4zm0-12.96a5.76 5.76 0 110 11.52 5.76 5.76 0 010-11.52z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.52 13.2h3.12v-1.44h-2.4V8.88H10.8v3.6a.72.72 0 00.72.72z\"\n});\n\nfunction SvgClock(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#000\",\n    viewBox: \"4.8 4.8 14.4 14.4\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClock);\nexport default __webpack_public_path__ + \"static/media/clock.f28c111f.svg\";\nexport { ForwardRef as ReactComponent };","export type ModeType = 'everyday' | 'weekdays' | 'custom';\n\nexport interface IDay {\n  day: string;\n  from: string;\n  to: string;\n}\n\nexport interface IData {\n  mode: ModeType;\n  timeData: {\n    everydayWeekdays: IDay[];\n    custom: IDay[];\n  }\n}\n\nexport const DAYS_OF_WEEK = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nexport const modeOptions = {\n  everyday: { value: 'everyday', label: 'Every day' },\n  weekdays: { value: 'weekdays', label: 'Weekdays' },\n  custom: { value: 'custom', label: 'Custom' }\n};","import { useState, useRef, MutableRefObject, useMemo } from 'react';\nimport Select, { IndicatorProps } from 'react-select';\n\nimport API from '../../api/api';\nimport { ReactSelectOption, IAnyObject } from '../../interfaces/interfaces';\nimport { useDidMount } from '../../hooks';\n\nimport './SettingsSchedule.scss';\nimport { \n  IDay,\n  IData,\n  ModeType,\n  modeOptions, \n  DAYS_OF_WEEK,\n} from './SettingsSchedule.types'\nimport ReturnBtn from '../../components/ReturnBtn/ReturnBtn';\nimport Spinner from '../../components/Spinner/Spinner';\nimport { ReactComponent as ClockIcon } from '../../icons/clock.svg';\n\nconst IS_HOUR_12 = true;\nconst MAX_MENU_HEIGHT = 200;\nconst ONE_HOUR_MS = 3600000;\n\nconst SettingsSchedule = () => {\n  const fieldsRef = useRef({}) as MutableRefObject<IAnyObject>;\n\n  const [pending, setPending] = useState(true);\n  const [data, setData] = useState<IData>({\n    mode: 'everyday',\n    timeData: {\n      everydayWeekdays: [],\n      custom: []\n    }\n  });\n\n  useDidMount(() => {\n    API.getWokTime()\n      .then(({ data }) => {\n        setData({\n          mode: data.mode,\n          timeData: {\n            everydayWeekdays: [data.times_for_mode.everyday],\n            custom: data.times_for_mode.custom\n          }\n        });\n\n        setPending(false);\n      })\n      .catch(console.error);\n  })\n\n  const timeOptions = useMemo(() => {\n    let date = new Date().setHours(0, 0, 0, 0);\n    let timeOptions: ReactSelectOption[] = [{ value: 'None', label: 'None' }];\n\n    for (let i = 0; i < 24; i++) {\n      const valueTime = new Date(date)\n        .toLocaleString('ru-RU', { hour: '2-digit', minute: '2-digit', hour12: false });\n\n      const labelTime = new Date(date)\n        .toLocaleString('en-US', { hour: '2-digit', minute: '2-digit', hour12: IS_HOUR_12 });\n\n      timeOptions.push({\n        value: valueTime,\n        label: labelTime,\n      });\n\n      date += 3600000;\n    }\n\n    timeOptions.push({ value: '24:00', label: 'Midnight', })\n\n    return timeOptions;\n  }, [])\n\n  const getIsOptionDisabled = ({ value: toValue, label }: ReactSelectOption, index: number) => {\n    const fromValue = (\n      data.mode === 'custom' \n        ? data.timeData.custom\n        : data.timeData.everydayWeekdays\n    )[index].from;\n\n    const fromTimestamp = new Date().setHours(+fromValue.slice(0, 2), +fromValue.slice(3), 0, 0);\n    const toTimestamp = new Date().setHours(+toValue.slice(0, 2), +toValue.slice(3), 0, 0);\n\n    return (fromTimestamp >= toTimestamp) && label !== '24:00';\n  }\n\n  const onChangeModeHandler = (value: ModeType) => {\n    if (data.mode === value) return;\n\n    setData((prev) => ({ ...prev, mode: value }));\n\n    const config = {\n      mode: value,\n      times: value === 'custom' \n        ? data.timeData.custom \n        : data.timeData.everydayWeekdays[0]\n    }\n\n    API.setWorkTime(config)\n      .then(({ data }) => {\n        setData({\n          mode: data.mode,\n          timeData: {\n            everydayWeekdays: [data.times_for_mode.everyday],\n            custom: data.times_for_mode.custom\n          }\n        })\n      })\n      .catch(console.error);\n  }\n\n  const onChangeTimeHandler = (value: string, index: number, type: 'from' | 'to') => {\n    if (\n      (data.mode === 'custom' \n        ? data.timeData.custom \n        : data.timeData.everydayWeekdays)[index][type] === value \n    ) return;\n\n    const getValues = (dayWorkTime: IDay, type: 'from' | 'to') => {\n      if (type === 'to') {\n        return { ...dayWorkTime, to: value };\n      }\n      else {\n        const fromTimestamp = new Date().setHours(+value.slice(0, 2), +value.slice(3), 0, 0);\n        const toTimestamp = new Date().setHours(+dayWorkTime.to.slice(0, 2), +dayWorkTime.to.slice(3), 0, 0);\n\n        // If \"from\" time is more than \"to\" - set \"to\" time one hour more than \"from\"\n        if (fromTimestamp >= toTimestamp) {\n          return {\n            ...dayWorkTime,\n            from: value,\n            to: new Date(fromTimestamp + ONE_HOUR_MS).toLocaleString('us-US', { hour: '2-digit', minute: '2-digit', hour12: false })\n          };\n        }\n        else {\n          return { ...dayWorkTime, from: value };\n        }\n      }\n    } \n\n    setData((prev) => {\n      const updatedTimeData = { ...prev };\n\n      const modeTimeData = data.mode === 'custom' \n        ? updatedTimeData.timeData.custom \n        : updatedTimeData.timeData.everydayWeekdays;\n\n      modeTimeData[index] = getValues(modeTimeData[index], type);\n\n      return updatedTimeData;\n    });\n\n    const config = {\n      mode: data.mode,\n      times: data.mode === 'custom' \n        ? data.timeData.custom \n        : data.timeData.everydayWeekdays[0]\n    }\n\n    API.setWorkTime(config)\n      .then(({ data }) => {\n        setData({\n          mode: data.mode,\n          timeData: {\n            everydayWeekdays: [data.times_for_mode.everyday],\n            custom: data.times_for_mode.custom\n          }\n        })\n      })\n      .catch(console.error);\n  }\n\n  const isOpenMenuUp = (elem: HTMLDivElement) => {\n    const windowHeight = window.innerHeight;\n    const menuOffset = elem.getBoundingClientRect().bottom + MAX_MENU_HEIGHT;\n\n    return menuOffset >= windowHeight - 95;\n  }\n\n  const getTimeSelectMenuStyle = (index: number) => ({\n    menu: (provided: IAnyObject) => {\n      const isMenuUp = isOpenMenuUp(fieldsRef.current[index]);\n\n      return {\n        ...provided,\n        top: isMenuUp ? 'auto' : provided.top,\n        bottom: isMenuUp ? '100%' : provided.bottom\n      }\n    }\n  })\n\n  const CustomDropdownIndicator = (props: IndicatorProps<ReactSelectOption, false>) => (\n    <div {...props.innerProps} className=\"time-select__indicator time-select__dropdown-indicator\">\n      <ClockIcon />\n    </div>\n  )\n\n  const getSelectValue = (timeOptions: ReactSelectOption[], value: string) => {\n    return timeOptions.find((option: ReactSelectOption) => option.value === value);\n  };\n\n  if (pending) {\n    return (\n      <div className=\"settings-schedule__spinner\">\n        <Spinner size='150px' />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"settings-schedule\">\n      <div className=\"settings-schedule__header\">\n        <ReturnBtn route=\"/settings\" />\n\n        <h2 className=\"settings-schedule__title\">Schedule</h2>\n      </div>\n \n      <div className=\"settings-schedule__main\">\n        <div className=\"settings-schedule__mode\">\n          <label className=\"label\">Choose mode</label>\n\n          <Select\n            className=\"mode-select\"\n            classNamePrefix=\"mode-select\"\n            isSearchable={false}\n            value={modeOptions[data.mode]}\n            defaultValue={modeOptions.custom}\n            options={Object.values(modeOptions)}\n            onChange={(value) => value && onChangeModeHandler(value.value as ModeType)}\n            components={{\n              IndicatorSeparator: null\n            }}\n          />\n        </div>\n\n        <div className=\"settings-schedule__fields\">\n          {(data.mode === 'custom' \n            ? data.timeData.custom \n            : data.timeData.everydayWeekdays\n          ).map((day: IDay, index: number) => (\n            <div \n              key={day.day} \n              className=\"settings-schedule__field\" \n              ref={inst => (fieldsRef.current[index] = inst)}\n            > \n              <div className=\"settings-schedule__field-wrap\">\n                <label className=\"label\">{data.mode !== 'custom' ? 'Start at' : DAYS_OF_WEEK[index]}</label>\n              \n                <Select\n                  className=\"time-select\"\n                  classNamePrefix=\"time-select\"\n                  isSearchable={false}\n                  options={timeOptions.slice(0, timeOptions.length - 1)}\n                  defaultValue={timeOptions[17]}\n                  maxMenuHeight={MAX_MENU_HEIGHT}\n                  styles={getTimeSelectMenuStyle(index)}\n                  value={getSelectValue(timeOptions, day.from)}\n                  onChange={(value) => value && onChangeTimeHandler(value.value, index, 'from')}\n                  components={{\n                    IndicatorSeparator: null,\n                    DropdownIndicator: CustomDropdownIndicator\n                  }}\n                />\n              </div>\n\n              {(data.mode === 'custom' \n                ? data.timeData.custom \n                : data.timeData.everydayWeekdays)[index].from !== 'None' && \n                <>\n                  <span className=\"settings-schedule__time-divider\"></span>\n\n                  <div className=\"settings-schedule__field-wrap\">\n                    {data.mode !== 'custom' && <label className=\"label\">Ends at</label>}\n\n                    <Select\n                      className=\"time-select\"\n                      classNamePrefix=\"time-select\"\n                      isSearchable={false}\n                      options={timeOptions.slice(2)}\n                      defaultValue={timeOptions[33]}\n                      maxMenuHeight={MAX_MENU_HEIGHT}\n                      styles={getTimeSelectMenuStyle(index)}\n                      value={getSelectValue(timeOptions, day.to)}\n                      onChange={(value) => value && onChangeTimeHandler(value.value, index, 'to')}\n                      isOptionDisabled={(option) => getIsOptionDisabled(option, index)}\n                      components={{\n                        IndicatorSeparator: null,\n                        DropdownIndicator: CustomDropdownIndicator\n                      }}\n                    />\n                  </div>\n                </>\n              }\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SettingsSchedule;\n","import React from 'react';\n\nimport SettingsSchedule from '../../containers/SettingsSchedule/SettingsSchedule';\n\nconst SettingsSchedulePage = () => {\n  console.log('SettingsSchedule Render');\n  return (\n    <SettingsSchedule />\n  );\n}\n\nexport default SettingsSchedulePage;"],"sourceRoot":""}