{"version":3,"sources":["containers/SettingsSecurity/SettingsSecurity.tsx","pages/SettingsPage/SettingsSecurityPage.tsx"],"names":["validatePasswords","oldPassword","newPassword","passwordConfirmation","errors","validateFormValues","isEmpty","length","SettingsSecurity","dispatch","useDispatch","useState","pending","setPending","serverErrors","setServerErrors","handleDeleteAccountClick","openModal","MODAL_TYPES","deleteAccountModal","className","ReturnBtn","route","validate","onSubmit","values","form","API","changePassword","then","successPasswordChangeModal","reset","catch","err","response","data","handleSubmit","submitting","name","type","errorInputClass","errorClass","component","FormTextInput","placeholder","onClick","AsyncBtn","spinnerSize","disabled","SettingsSecurityPage","console","log"],"mappings":"gRAmIMA,EAAoB,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,YAAaC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,qBAC/CC,EAAc,GAiBpB,OAfIC,IAAmBC,QAAQL,KAC7BG,EAAOH,YAAc,sBAEnBA,GAAeI,IAAmBC,QAAQJ,KAC5CE,EAAOF,YAAc,wBAEnBD,IAA0B,OAAXC,QAAW,IAAXA,OAAA,EAAAA,EAAaK,QAAS,IACvCH,EAAOF,YAAc,kDAEnBD,GAAeC,GAAeG,IAAmBC,QAAQH,KAC3DC,EAAOD,qBAAuB,gCAE5BD,IAAgBG,IAAmBC,QAAQH,IAAyBD,IAAgBC,KACtFC,EAAOD,qBAAuB,2BAEzBC,GAGMI,EApIU,WACvB,IAAMC,EAAWC,cADY,EAGCC,oBAAS,GAHV,mBAGtBC,EAHsB,KAGbC,EAHa,OAIWF,mBAAS,IAJpB,mBAItBG,EAJsB,KAIRC,EAJQ,KAsBvBC,EAA2B,WAC/BP,EAASQ,YAAUC,IAAYC,sBAGjC,OACE,sBAAKC,UAAU,oBAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAACC,EAAA,EAAD,CAAWC,MAAM,cAEjB,oBAAIF,UAAU,2BAAd,yBAGF,cAAC,IAAD,CACEG,SAAUvB,EACVwB,SA9BiB,SAACC,EAAkCC,GACxDb,GAAW,GAEXc,IAAIC,eAAeH,GAChBI,MAAK,WACJpB,EAASQ,YAAUC,IAAYY,6BAC/BjB,GAAW,GACXE,EAAgB,IAChBW,EAAKK,WAENC,OAAM,SAACC,GACNpB,GAAW,GACXE,EAAgBkB,EAAIC,SAASC,KAAK/B,YAgBpC,SAIG,gBAAGgC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAjB,OACC,uBAAMb,SAAUY,EAAchB,UAAU,0BAAxC,UACE,sBAAKA,UAAU,aAAf,UACE,uBAAOA,UAAU,wBAAjB,2BAEA,cAAC,IAAD,CACEkB,KAAK,cACLC,KAAK,WACLnB,UAAU,QACVoB,gBAAgB,eAChBC,WAAW,oBACXC,UAAWC,IACXC,YAAY,kBACZ9B,aAAcA,OAIlB,sBAAKM,UAAU,aAAf,UACE,uBAAOA,UAAU,wBAAjB,0BAEA,cAAC,IAAD,CACEkB,KAAK,cACLC,KAAK,WACLnB,UAAU,QACVoB,gBAAgB,eAChBC,WAAW,oBACXC,UAAWC,IACXC,YAAY,eACZ9B,aAAcA,OAIlB,sBAAKM,UAAU,aAAf,UACE,uBAAOA,UAAU,wBAAjB,6BAEA,cAAC,IAAD,CACEkB,KAAK,uBACLC,KAAK,WACLnB,UAAU,QACVoB,gBAAgB,eAChBC,WAAW,oBACXC,UAAWC,IACXC,YAAY,kBACZ9B,aAAcA,OAIlB,yBACEM,UAAU,4BACVmB,KAAK,SACLM,QAAS7B,EAHX,UAKE,cAAC,IAAD,CAAWI,UAAU,mCAErB,qDAGF,cAAC0B,EAAA,EAAD,CACEP,KAAK,SACLnB,UAAU,+CACV2B,YAAY,OACZnC,QAASA,EACToC,SAAUX,EALZ,4BCxGGY,UAPc,WAE3B,OADAC,QAAQC,IAAI,2BAEV,cAAC,EAAD","file":"static/js/SettingsSecurityChunk.ffe8aa31.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { useDispatch } from 'react-redux';\n\nimport API from '../../api/api';\nimport validateFormValues from '../../utils/validateFormValues';\nimport { MODAL_TYPES, openModal } from '../../redux/ducks/activeWindows';\n\nimport './SettingsSecurity.scss';\nimport { ReactComponent as TrashIcon } from '../../icons/trash.svg';\nimport FormTextInput from '../../components/FormTextInput';\nimport AsyncBtn from '../../components/AsyncBtn/AsyncBtn';\nimport ReturnBtn from '../../components/ReturnBtn/ReturnBtn';\n\nexport interface IResetPasswordFormValues {\n  oldPassword: string;\n  newPassword: string;\n  passwordConfirmation: string;\n}\n\nconst SettingsSecurity = () => {\n  const dispatch = useDispatch();\n\n  const [pending, setPending] = useState(false);\n  const [serverErrors, setServerErrors] = useState({});\n\n  const updatePassword = (values: IResetPasswordFormValues, form: any) => {\n    setPending(true);\n\n    API.changePassword(values)\n      .then(() => {\n        dispatch(openModal(MODAL_TYPES.successPasswordChangeModal));\n        setPending(false);\n        setServerErrors({});\n        form.reset();\n      })\n      .catch((err) => {\n        setPending(false);\n        setServerErrors(err.response.data.errors);\n      });\n  }\n\n  const handleDeleteAccountClick = () => {\n    dispatch(openModal(MODAL_TYPES.deleteAccountModal))\n  }\n\n  return (\n    <div className=\"settings-security\">\n      <div className=\"settings-security__header\">\n        <ReturnBtn route=\"/settings\" />\n\n        <h2 className=\"settings-security__title\">Security</h2>\n      </div>\n\n      <Form\n        validate={validatePasswords}\n        onSubmit={updatePassword}\n      >\n        {({ handleSubmit, submitting }) => (\n          <form onSubmit={handleSubmit} className=\"settings-security__form\">\n            <div className=\"form-group\">\n              <label className=\"label label--required\">Your password</label>\n\n              <Field\n                name=\"oldPassword\"\n                type=\"password\"\n                className=\"input\"\n                errorInputClass=\"input--error\"\n                errorClass=\"form-group__error\"\n                component={FormTextInput}\n                placeholder=\"Select Password\"\n                serverErrors={serverErrors}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"label label--required\">New password</label>\n\n              <Field\n                name=\"newPassword\"\n                type=\"password\"\n                className=\"input\"\n                errorInputClass=\"input--error\"\n                errorClass=\"form-group__error\"\n                component={FormTextInput}\n                placeholder=\"New Password\"\n                serverErrors={serverErrors}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"label label--required\">Repeat password</label>\n\n              <Field\n                name=\"passwordConfirmation\"\n                type=\"password\"\n                className=\"input\"\n                errorInputClass=\"input--error\"\n                errorClass=\"form-group__error\"\n                component={FormTextInput}\n                placeholder=\"Repeat Password\"\n                serverErrors={serverErrors}\n              />\n            </div>\n\n            <button \n              className=\"settings-security__delete\" \n              type=\"button\" \n              onClick={handleDeleteAccountClick}\n            >\n              <TrashIcon className=\"settings-security__delete-icon\" />\n\n              <span>Delete Account</span>\n            </button>\n\n            <AsyncBtn\n              type=\"submit\"\n              className=\"settings-security__save-btn btn btn--primary\"\n              spinnerSize=\"18px\"\n              pending={pending}\n              disabled={submitting}\n            >\n              Save\n            </AsyncBtn>\n          </form>\n        )}\n      </Form>\n    </div >\n  )\n}\n\nconst validatePasswords = ({ oldPassword, newPassword, passwordConfirmation }: IResetPasswordFormValues) => {\n  const errors: any = {};\n\n  if (validateFormValues.isEmpty(oldPassword)) {\n    errors.oldPassword = 'Enter the password';\n  }\n  if (oldPassword && validateFormValues.isEmpty(newPassword)) {\n    errors.newPassword = 'Enter a new password';\n  }\n  if (oldPassword && newPassword?.length < 6) {\n    errors.newPassword = 'The new password must be at least 6 characters';\n  }\n  if (oldPassword && newPassword && validateFormValues.isEmpty(passwordConfirmation)) {\n    errors.passwordConfirmation = 'Enter the new password again';\n  }\n  if (newPassword && (validateFormValues.isEmpty(passwordConfirmation) || newPassword !== passwordConfirmation)) {\n    errors.passwordConfirmation = 'Passwords are not match';\n  }\n  return errors;\n}\n\nexport default SettingsSecurity;\n","import React from 'react';\n\nimport SettingsSecurity from '../../containers/SettingsSecurity/SettingsSecurity';\n\nconst SettingsSecurityPage = () => {\n  console.log('SettingsSecurity Render');\n  return (\n    <SettingsSecurity />\n  );\n}\n\nexport default SettingsSecurityPage;"],"sourceRoot":""}